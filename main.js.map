{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/adventure-sheet/adventure-sheet.component.ts","./src/app/components/adventure-sheet/adventure-sheet.component.html","./src/app/components/basic-character-stats/basic-character-stats.component.ts","./src/app/components/basic-character-stats/basic-character-stats.component.html","./src/app/components/character-sheet/character-sheet.component.ts","./src/app/components/character-sheet/character-sheet.component.html","./src/app/components/numeric-value-handler/checkresults.ts","./src/app/components/numeric-value-handler/numeric-value-handler.component.ts","./src/app/components/numeric-value-handler/numeric-value-handler.component.html","./src/app/components/player-import-export/player-import-export.component.ts","./src/app/components/player-import-export/player-import-export.component.html","./src/app/components/player-localstorage/player-localstorage.component.ts","./src/app/components/player-localstorage/player-localstorage.component.html","./src/app/components/primitives/stat-value/stat-value.component.ts","./src/app/components/primitives/stat-value/stat-value.component.html","./src/app/models/player.ts","./src/app/ng-material.module.ts","./src/app/services/dice-roller.service.ts","./src/app/services/player-localstorage.service.ts","./src/app/services/player-mode-provider.service.ts","./src/app/services/player-model-provider.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { Player } from './models/player';\nimport { PlayerLocalstorageService } from './services/player-localstorage.service';\nimport { PlayerModeProviderService } from './services/player-mode-provider.service';\nimport { PlayerModelProviderService } from './services/player-model-provider.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit {\n  title = 'Midgard Dynamic Character Sheet';\n\n  constructor(private pmps: PlayerModelProviderService, \n    private plss: PlayerLocalstorageService, \n    private pmodeps: PlayerModeProviderService,\n    private titleService:Title) {\n  }\n\n  ngAfterViewInit(): void {\n    const playerFromStorage = this.plss.loadPlayer();\n    if (playerFromStorage != null) {\n      this.pmps.player = playerFromStorage;\n      this.titleService.setTitle(playerFromStorage.name + ' - Midgard Dynamic Character Sheet');\n    }\n  }\n\n  get player(): Player {\n    return this.pmps.player;\n  }\n\n  set player(p: Player) {\n    this.pmps.player = p;\n    this.titleService.setTitle(p.name + ' - Midgard Dynamic Character Sheet');\n  }\n\n  get editMode():boolean {\n    return this.pmodeps.editMode;\n  }\n\n  set editMode(b:boolean) {\n     this.pmodeps.editMode = b;\n  }\n}\n","<h1>Midgard Dynamic Character Sheet</h1>\n<div class=\"basic-character-block\">\n  <app-basic-character-stats [(player)]=\"player\"></app-basic-character-stats>\n  <label>\n    Edit Character: \n    <input type=\"checkbox\" [(ngModel)]=\"editMode\">\n  </label>\n</div>\n<mat-tab-group>\n  <mat-tab label=\"Character\">\n    <app-character-sheet [(player)]=\"player\"></app-character-sheet>\n  </mat-tab>\n  <mat-tab label=\"Abenteuer Tagesbogen\">\n    <app-adventure-sheet [(player)]=\"player\"></app-adventure-sheet>\n  </mat-tab>\n  <mat-tab label=\"UI Element Beispiel / Demo\">\n    <app-numeric-value-handler label='HP' [baseValue]=\"30\" [minValue]=\"0\" [maxValue]=\"30\"></app-numeric-value-handler>\n    <br />\n    <app-numeric-value-handler label='AP' [baseValue]='12' [minValue]=\"0\" [maxValue]=\"12\"></app-numeric-value-handler>\n    <br />\n    Beispiel - Numerische EIngabe ohne Reset:<br />\n    <app-numeric-value-handler label='BB' [baseValue]='500' [showReset]='false' [minValue]=\"0\"\n      [maxValue]=\"99999999\"></app-numeric-value-handler>\n  </mat-tab>\n  <mat-tab label=\"Zauber\"> Hier könnten die Zaubersprüche stehen </mat-tab>\n  <mat-tab label=\"Beschwörungen\"> Hier könnten die Beschwörungen stehen</mat-tab>\n  <mat-tab label=\"Player Storage\">\n    <app-player-localstorage></app-player-localstorage>\n  </mat-tab>\n  <mat-tab label=\"Player Import/Export\">\n    <app-player-import-export></app-player-import-export>\n  </mat-tab>\n</mat-tab-group>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NumericValueHandlerComponent } from './components/numeric-value-handler/numeric-value-handler.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgMaterialModule } from './ng-material.module';\nimport { AdventureSheetComponent } from './components/adventure-sheet/adventure-sheet.component';\nimport { PlayerImportExportComponent } from './components/player-import-export/player-import-export.component';\nimport { PlayerModelProviderService } from './services/player-model-provider.service';\nimport { CharacterSheetComponent } from './components/character-sheet/character-sheet.component';\nimport { PlayerLocalstorageComponent } from './components/player-localstorage/player-localstorage.component';\nimport { BasicCharacterStatsComponent } from './components/basic-character-stats/basic-character-stats.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StatValueComponent } from './components/primitives/stat-value/stat-value.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NumericValueHandlerComponent,\n    AdventureSheetComponent,\n    PlayerImportExportComponent,\n    CharacterSheetComponent,\n    PlayerLocalstorageComponent,\n    BasicCharacterStatsComponent,\n    StatValueComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    NgMaterialModule,\n    HttpClientModule\n  ],\n  providers: [ PlayerModelProviderService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ConsumableItem, Player } from 'src/app/models/player';\n\n@Component({\n  selector: 'app-adventure-sheet',\n  templateUrl: './adventure-sheet.component.html',\n  styleUrls: ['./adventure-sheet.component.css']\n})\nexport class AdventureSheetComponent implements OnInit {\n\n  @Input() player!: Player;\n  @Output() playerChange = new EventEmitter<Player>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  addItem(event: Event): void {\n    this.player.items.push(new ConsumableItem());\n  }\n\n  removeItem(itemToRemove: ConsumableItem): void{\n    var itemIndex = this.player.items.indexOf(itemToRemove);\n    this.player.items.splice(itemIndex, 1);\n  }\n}\n","<div class=\"container\">\n    <div class=\"CoinsAndJewelsArea\">\n        <div class=\"CoinsArea HorizontalFlexbox\">\n            <h2>Münzen</h2>\n            <app-numeric-value-handler label=\"Gold&nbsp;&nbsp;\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\"\n                [(currentValue)]=\"player.currencies.coins.gold\">\n            </app-numeric-value-handler>\n            <app-numeric-value-handler label=\"Silber\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\"\n                [(currentValue)]=\"player.currencies.coins.silver\">\n            </app-numeric-value-handler>\n            <app-numeric-value-handler label=\"Kupfer\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\"\n                [(currentValue)]=\"player.currencies.coins.copper\">\n            </app-numeric-value-handler>\n        </div>\n        <div class=\"JewelArea HorizontalFlexbox\">       \n            <h2>Edelsteine</h2>\n            <app-numeric-value-handler label=\"50er&nbsp;&nbsp;\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\"\n                [(currentValue)]=\"player.currencies.jewels.fifties\">\n            </app-numeric-value-handler>\n            <app-numeric-value-handler label=\"100er&nbsp;\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\"\n                [(currentValue)]=\"player.currencies.jewels.hundreds\">\n            </app-numeric-value-handler>\n            <app-numeric-value-handler label=\"1000er\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\"\n                [(currentValue)]=\"player.currencies.jewels.thousands\">\n            </app-numeric-value-handler>\n        </div>\n    </div>\n    <div class=\"EquipmentAndPotionsArea\">\n        <div class=\"PotionsArea\">\n            <div class=\"HealingPotionsArea  HorizontalFlexbox\">\n                <h2>Heiltränke</h2>\n                <app-numeric-value-handler label=\"1w6\" [(currentValue)]=\"player.potions.healing.small\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\">\n                </app-numeric-value-handler>\n                <app-numeric-value-handler label=\"2w6\" [(currentValue)]=\"player.potions.healing.medium\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\">\n                </app-numeric-value-handler>\n                <app-numeric-value-handler label=\"3w6\" [(currentValue)]=\"player.potions.healing.large\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\">\n                </app-numeric-value-handler>\n            </div>\n            <div class=\"PowerPotionsArea HorizontalFlexbox\">\n                <h2>Krafttränke</h2>\n                <app-numeric-value-handler label=\"1w6\" [(currentValue)]=\"player.potions.strength.small\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\">\n                </app-numeric-value-handler>\n                <app-numeric-value-handler label=\"2w6\" [(currentValue)]=\"player.potions.strength.large\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\">\n                </app-numeric-value-handler>\n            </div>\n        </div>\n        <div class=\"EquipmentArea HorizontalFlexbox\">\n            <h2>Ausrüstung</h2>\n            <textarea class=\"equipment-content\"></textarea>\n        </div>\n    </div>\n    <div class=\"MaterialArea\">\n        <h2>Verbrauchsmaterial</h2>\n        <table class=\"material-table\">\n            <thead>\n                <tr class=\"material-row\">\n                    <th>Name/Beschreibung</th>\n                    <th>Menge</th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of player.items\">\n                    <td class=\"Material-Column1\">\n                        <input class=\"material-description\" [(ngModel)]=\"item.name\">\n                        <textarea class=\"material-description\" [(ngModel)]=\"item.description\"></textarea>\n                    </td>\n                    <td class=\"Material-Quantity-Alignment Material-Column2\">\n                        <div class=\"HorizontalFlexbox\">\n                            <app-numeric-value-handler label=\"\" [(currentValue)]=\"item.quantity\" [minValue]=\"0\"\n                                [maxValue]=\"99999999999\" [showReset]=\"false\"></app-numeric-value-handler>\n                            <button (click)=\"removeItem(item)\">x</button>\n                        </div>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <button (click)=\"addItem($event)\">+</button>\n    </div>\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Player } from 'src/app/models/player';\n\n@Component({\n  selector: 'app-basic-character-stats',\n  templateUrl: './basic-character-stats.component.html',\n  styleUrls: ['./basic-character-stats.component.css']\n})\nexport class BasicCharacterStatsComponent implements OnInit {\n  @Input() player!: Player;\n  @Output() playerChange = new EventEmitter<Player>();\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<label>\n    Name\n    <input [(ngModel)]=\"player.name\">\n</label>\n<br />\n<app-numeric-value-handler label=\"HP\" [(currentValue)]=\"player.stats.current.hitPoints\"\n    [baseValue]=\"player.stats.base.hitPoints\" [minValue]=\"0\" [maxValue]=\"player.stats.base.hitPoints\">\n</app-numeric-value-handler>\n<br />\n<app-numeric-value-handler label=\"AP\" [(currentValue)]=\"player.stats.current.staminaPoints\"\n    [baseValue]=\"player.stats.base.staminaPoints\" [minValue]=\"0\" [maxValue]=\"player.stats.base.staminaPoints\">\n</app-numeric-value-handler>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Player } from 'src/app/models/player';\nimport { PlayerModeProviderService } from 'src/app/services/player-mode-provider.service';\n\n@Component({\n  selector: 'app-character-sheet',\n  templateUrl: './character-sheet.component.html',\n  styleUrls: ['./character-sheet.component.css']\n})\nexport class CharacterSheetComponent implements OnInit {\n\n  @Input() player!: Player;\n  @Output() playerChange = new EventEmitter<Player>();\n  constructor(public pmodeps: PlayerModeProviderService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"attributes-block\">\n    <table>\n        <tr>\n            <td>\n                <app-stat-value label=\"ST\" [(value)]=\"player.attributes.strength\" [diceSides]=\"100\"></app-stat-value>\n            </td>\n            <td>\n                <app-stat-value label=\"GE\" [(value)]=\"player.attributes.agility\" [diceSides]=\"100\"></app-stat-value>\n            </td>\n            <td>\n                <app-stat-value label=\"KO\" [(value)]=\"player.attributes.constitution\"\n                    [diceSides]=\"100\"></app-stat-value>\n            </td>\n            <td>\n                <app-stat-value label=\"IN\" [(value)]=\"player.attributes.intelligence\"\n                    [diceSides]=\"100\"></app-stat-value>\n            </td>\n            <td>\n                <app-stat-value label=\"ZT\" [(value)]=\"player.attributes.magicAffinity\"\n                    [diceSides]=\"100\"></app-stat-value>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <app-stat-value label=\"AU\" [(value)]=\"player.attributes.looks\" [diceSides]=\"100\"></app-stat-value>\n            </td>\n            <td>\n                <app-stat-value label=\"PA\" [(value)]=\"player.attributes.charisma\" [diceSides]=\"100\"></app-stat-value>\n            </td>\n            <td>\n                <app-stat-value label=\"SB\" [(value)]=\"player.attributes.selfControl\" [diceSides]=\"100\"></app-stat-value>\n            </td>\n            <td>\n                <app-stat-value label=\"HGW\" [(value)]=\"player.attributes.closeQuarterCombatAffinity\"\n                    [diceSides]=\"100\"></app-stat-value>\n            </td>\n            <td>\n                <app-stat-value label=\"KAW\" [(value)]=\"player.attributes.showOfStrengthAffinitiy\"\n                    [diceSides]=\"100\"></app-stat-value>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <app-stat-value label=\"RW\" [(value)]=\"player.attributes.reaction\" [diceSides]=\"100\"></app-stat-value>\n            </td>\n            <td>\n                <label>B:\n                    <input type=\"number\" [(ngModel)]=\"player.attributes.movement\">\n                </label>\n            </td>\n            <td>\n                <label>WLW:\n                    <input type=\"number\" [(ngModel)]=\"player.attributes.revivalAffinitiy\">\n                </label>\n            </td>\n            <td>\n                <label>LP-Basis:\n                    <input type=\"number\" [(ngModel)]=\"player.attributes.hitPointsBase\">\n                </label>\n            </td>\n            <td>\n                <label>GiT:\n                    <input type=\"number\" [(ngModel)]=\"player.attributes.poisonResistance\">\n                </label>\n            </td>\n        </tr>\n    </table>\n</div>\n<div class=\"bonus-block\">\n    <table>\n        <tr>\n            <td>persönlicher Bonus\n            </td>\n            <td>\n                <label>Ausdauer:\n                    <input type=\"number\" [(ngModel)]=\"player.bonusStats.stamina\" [readOnly]=\"!pmodeps.editMode\">\n                </label>\n            </td>\n            <td>\n                <label>Zaubern:\n                    <input type=\"number\" [(ngModel)]=\"player.bonusStats.magic\">\n                </label>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <label>Angriff:\n                    <input type=\"number\" [(ngModel)]=\"player.bonusStats.attack\">\n                </label>\n            </td>\n            <td>\n                <label>Schaden:\n                    <input type=\"number\" [(ngModel)]=\"player.bonusStats.damage\">\n                </label>\n            </td>\n            <td>\n                <label>Abwehr:\n                    <input type=\"number\" [(ngModel)]=\"player.bonusStats.defense\">\n                </label>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <label>psy.ZR:\n                    <input type=\"number\" [(ngModel)]=\"player.bonusStats.magicResistance.psychologic\">\n                </label>\n            </td>\n            <td>\n                <label>phs.ZR:\n                    <input type=\"number\" [(ngModel)]=\"player.bonusStats.magicResistance.physical\">\n                </label>\n            </td>\n            <td>\n                <label>phk.ZR:\n                    <input type=\"number\" [(ngModel)]=\"player.bonusStats.magicResistance.environmental\">\n                </label>\n            </td>\n        </tr>\n    </table>\n</div>\n<div class=\"defense-block\">\n    <table>\n        <tr>\n            <td rowspan=\"3\">\n                <label>\n                    Rüstung:\n                    <textarea [(ngModel)]=\"player.defenseStats.armorDescription\"></textarea>\n                </label>\n            </td>\n            <td>\n                <label>RK:\n                    <input [(ngModel)]=\"player.defenseStats.armorClass\">\n                </label>\n            </td>\n            <td>\n                <label>psy.ZR:\n                    <input type=\"number\" [(ngModel)]=\"player.defenseStats.magicResistance.psychologic\">\n                </label>\n\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <label>LPV:\n                    <input type=\"number\" [(ngModel)]=\"player.defenseStats.hitPointLossValue\">\n                </label>\n            </td>\n\n            <td>\n                <label>phs.ZR:\n                    <input type=\"number\" [(ngModel)]=\"player.defenseStats.magicResistance.physical\">\n                </label>\n            </td>\n\n        </tr>\n        <tr>\n            <td>\n                <label>Abwehr:\n                    <input type=\"number\" [(ngModel)]=\"player.defenseStats.defense\">\n                </label>\n            </td>\n\n            <td>\n                <label>phk.ZR:\n                    <input type=\"number\" [(ngModel)]=\"player.defenseStats.magicResistance.environmental\">\n                </label>\n            </td>\n        </tr>\n    </table>\n</div>\n<div class=\"experience-block\">\n\n    <table>\n        <tr>\n            <td colspan=\"3\">\n                <label>GFP:\n                    <input type=\"number\" [(ngModel)]=\"player.experience.total\">\n                </label>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <label>AEP:\n                    <input type=\"number\" [(ngModel)]=\"player.experience.common\">\n                </label>\n            </td>\n            <td>\n                <label>KEP:\n                    <input type=\"number\" [(ngModel)]=\"player.experience.battle\">\n                </label>\n            </td>\n            <td>\n                <label>ZEP:\n                    <input type=\"number\" [(ngModel)]=\"player.experience.magic\">\n                </label>\n            </td>\n        </tr>\n        <tr>\n            <td>\n                <app-numeric-value-handler label=\"GS:\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\"\n                    [(currentValue)]=\"player.currencies.coins.gold\">\n                </app-numeric-value-handler>\n            </td>\n            <td>\n                <app-numeric-value-handler label=\"SS:\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\"\n                    [(currentValue)]=\"player.currencies.coins.silver\">\n                </app-numeric-value-handler>\n            </td>\n            <td>\n                <app-numeric-value-handler label=\"KS:\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\"\n                    [(currentValue)]=\"player.currencies.coins.copper\">\n                </app-numeric-value-handler>\n            </td>\n        </tr>\n    </table>\n</div>","export class CheckNumberResult {\n    isNumber: boolean = false;\n    value: number = Number.NaN; \n}\n\nexport class CheckEvaluatableToNumberResult {\n    isEvaluatable: boolean = false;\n    isExpressionTerminated: boolean = false;\n    value: number = Number.NaN; \n}","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CheckEvaluatableToNumberResult, CheckNumberResult } from './checkresults';\r\n\r\n@Component({\r\n  selector: 'app-numeric-value-handler',\r\n  templateUrl: './numeric-value-handler.component.html',\r\n  styleUrls: ['./numeric-value-handler.component.css']\r\n})\r\nexport class NumericValueHandlerComponent {\r\n\r\n  @Input() label: string = '';\r\n  _currentValue: number = 0;\r\n  currentText: string = '0';\r\n  @Input() minValue: number | undefined;\r\n  @Input() maxValue: number | undefined;\r\n  @Input() baseValue: number | undefined;\r\n  @Input() showReset: boolean = true;\r\n  @Output() currentValueChange = new EventEmitter<number>();\r\n  currentTextChange = new EventEmitter<string>();\r\n  projectingValue: boolean = false;\r\n  projectedValue: number = 0;\r\n\r\n  constructor() { }\r\n\r\n  get isValid() {\r\n    if (this.currentValue === null || this.currentValue === undefined)\r\n      return false;\r\n\r\n    const canEvaluatableToNumberCheckResult = this.canEvaluatableToNumber(this.currentText);\r\n    if (!canEvaluatableToNumberCheckResult.isEvaluatable) {\r\n      return false;\r\n    }\r\n\r\n    return this.isNumberWithinRange(canEvaluatableToNumberCheckResult.value) && this.isNumberWithinRange(this._currentValue);\r\n  }\r\n\r\n\r\n  get currentValue(): number {\r\n    return this._currentValue;\r\n  }\r\n\r\n  @Input()\r\n  set currentValue(val: number) {\r\n    this._currentValue = val;\r\n    this.currentText = this.currentValue.toString();\r\n    this.currentValueChange.emit(this._currentValue);\r\n\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent) {\r\n    let handled = false;\r\n    switch (event.key) {\r\n      case \"Escape\":\r\n        this.resetValue();\r\n        handled = true;\r\n        break;\r\n      case \"Up\":\r\n      case \"ArrowUp\":\r\n        this.countUp();\r\n        handled = true;\r\n        break;\r\n      case \"Down\":\r\n      case \"ArrowDown\":\r\n        this.countDown();\r\n        handled = true;\r\n        break;\r\n\r\n    }\r\n    if (handled) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  onModelChange(event: Event): void {\r\n    this.projectingValue = false;\r\n    // Unclear workaround:\r\n    // Without binding the ngModelEvent and emitting the currentValue ... direct edits of the input control are not registered outside of this component\r\n    // Question is why?\r\n    const isNumberCheckResult = this.isValidNumber(this.currentText);\r\n    const canEvaluatableToNumberCheckResult = this.canEvaluatableToNumber(this.currentText);\r\n    if (isNumberCheckResult.isNumber && this.isNumberWithinRange(isNumberCheckResult.value)) {\r\n      this.currentValue = isNumberCheckResult.value;\r\n    }\r\n    else if (canEvaluatableToNumberCheckResult.isEvaluatable && canEvaluatableToNumberCheckResult.isExpressionTerminated && this.isNumberWithinRange(canEvaluatableToNumberCheckResult.value)) {\r\n      this.currentValue = canEvaluatableToNumberCheckResult.value;\r\n    }\r\n    else if (canEvaluatableToNumberCheckResult.isEvaluatable && !canEvaluatableToNumberCheckResult.isExpressionTerminated) {\r\n      this.projectingValue = true;\r\n      this.projectedValue = canEvaluatableToNumberCheckResult.value;\r\n    }\r\n  }\r\n\r\n  get canCountUp() {\r\n    if (this.maxValue === undefined) {\r\n      return true;\r\n    }\r\n    return this.currentValue < this.maxValue;\r\n  }\r\n\r\n  get canCountDown() {\r\n    if (this.minValue === undefined) {\r\n      return true;\r\n    }\r\n    return this.currentValue > this.minValue;\r\n  }\r\n\r\n  get canReset() {\r\n    return (this.baseValue !== undefined && this.baseValue != this.currentValue)\r\n      || this.projectingValue\r\n      || !this.isValid;\r\n  }\r\n\r\n  // TODO MaxWert muss überschreibbar werden wenn man z.B. im Level Up Modus ist\r\n  countUp() {\r\n    if (this.canCountUp) {\r\n      this.currentValue = this.currentValue + 1;\r\n    }\r\n  }\r\n\r\n  countDown() {\r\n    if (this.canCountDown) {\r\n      this.currentValue = this.currentValue - 1;\r\n    }\r\n  }\r\n\r\n  resetValue() {\r\n    if (!this.canReset) {\r\n      return;\r\n    }\r\n\r\n    if (this.projectingValue || !this.isValid) {\r\n      // Restore last valid value by passing it through the public property setter\r\n      this.currentValue = this._currentValue;\r\n    }\r\n    else if (this.isValid && this.baseValue !== undefined) {\r\n      this.currentValue = this.baseValue;\r\n    }\r\n    this.projectingValue = false;\r\n  }\r\n\r\n  private isNumberWithinRange(val: number): boolean {\r\n    let isMinValid = true;\r\n    let isMaxValid = true;\r\n    if (this.maxValue !== undefined) {\r\n      isMaxValid = val <= this.maxValue;\r\n    }\r\n    if (this.minValue !== undefined) {\r\n      isMinValid = val >= this.minValue;\r\n    }\r\n    return isMinValid && isMaxValid;\r\n  }\r\n\r\n  private canEvaluatableToNumber(text: string): CheckEvaluatableToNumberResult {\r\n    const result = new CheckEvaluatableToNumberResult();\r\n    if (this.isEmptyString(text))\r\n      return result;\r\n\r\n    try {\r\n      let sanitizedText = text;\r\n      if (text.endsWith(\"=\")) {\r\n        sanitizedText = text.substring(0, text.length - 1);\r\n        result.isExpressionTerminated = true;\r\n      }\r\n      var evalResult = eval(sanitizedText);\r\n      const numberEvaluationResult = this.isValidNumber(evalResult);\r\n\r\n      result.isEvaluatable = numberEvaluationResult.isNumber;\r\n      result.value = numberEvaluationResult.value;\r\n\r\n      return result;\r\n    }\r\n    catch {\r\n      return result;\r\n    }\r\n  }\r\n\r\n  private isValidNumber(input: any): CheckNumberResult {\r\n    if (typeof input === \"string\") {\r\n      return this.isTextValidNumber(input);\r\n    }\r\n    else if (typeof input === \"number\") {\r\n      const flooredNumber = this.getFlooredValue(input);\r\n      const result = new CheckNumberResult();\r\n      result.isNumber = this.isNumberValidNumber(flooredNumber);\r\n      result.value = flooredNumber\r\n      return result;\r\n    }\r\n    else {\r\n      return new CheckNumberResult();\r\n    }\r\n  }\r\n  private isNumberValidNumber(val: number): boolean {\r\n    return Number.isSafeInteger(val);\r\n  }\r\n\r\n  private getFlooredValue(val: number): number {\r\n    return Math.floor(val);\r\n  }\r\n\r\n  private isTextValidNumber(text: string): CheckNumberResult {\r\n    const result = new CheckNumberResult();\r\n    if (this.isEmptyString(text))\r\n      return result;\r\n\r\n    const converterFlooredNumber = this.getFlooredValue(Number(text).valueOf());\r\n    result.isNumber = this.isNumberValidNumber(converterFlooredNumber);\r\n    result.value = converterFlooredNumber;\r\n    return result;\r\n  }\r\n\r\n  private isEmptyString(text: string): boolean {\r\n    return text === null || text === undefined || text.trim() === '';\r\n\r\n  }\r\n}\r\n","<div class=\"flex-container flex-item-gap\">\n    <label class=\"flex-container bold growable-flex-item flex-item-gap\">{{ label }}\n        <input type=\"text\" class=\"flex-container growable-flex-item\" [(ngModel)]=\"currentText\"\n            (ngModelChange)=\"onModelChange($event)\" [max]=\"maxValue\" [min]=\"minValue\" required\n            [class.invalid-input]=\"!isValid\" (keydown)=\"onKeyDown($event)\" />\n            <span *ngIf=\"projectingValue\"> = {{ projectedValue }}</span>\n    </label>\n\n    <span class=\"flex-container\">\n        <button (click)=\"countDown()\" [disabled]=\"!canCountDown || !isValid\">-</button>\n        <button (click)=\"countUp()\" [disabled]=\"!canCountUp || !isValid\">+</button>\n        <button *ngIf='showReset' (click)=\"resetValue()\" [disabled]=\"!canReset\">Reset</button>\n    </span>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PlayerModelProviderService } from 'src/app/services/player-model-provider.service';\n\n@Component({\n  selector: 'app-player-import-export',\n  templateUrl: './player-import-export.component.html',\n  styleUrls: ['./player-import-export.component.css']\n})\nexport class PlayerImportExportComponent implements OnInit {\n\n  constructor(private playerModelProviderService: PlayerModelProviderService) { }\n\n  actionResult: string | null = null;\n  jsonContent: string = '';\n  ngOnInit(): void {\n  }\n\n  getPlayerAsJson(): string {\n    return JSON.stringify(this.playerModelProviderService.player, null, 2);\n  }\n\n  importPlayer(event: Event): void {\n    if (this.jsonContent === undefined || this.jsonContent == '') {\n      this.actionResult = \"Nothing to import. Paste a character json into the text area!\"\n      return;\n    }\n    this.setPlayerFromJson(this.jsonContent);\n  }\n\n  exportPlayer(event: Event): void {\n    try {\n      this.jsonContent = this.getPlayerAsJson();\n      this.actionResult = \"Exported successfully\";\n    }\n    catch (error) {\n      this.setActionResultFromError(error);\n    }\n  }\n\n  setPlayerFromJson(playerJson: string): void {\n    try {\n      this.playerModelProviderService.player = JSON.parse(playerJson);\n      this.actionResult = \"Imported successfully\";\n    }\n    catch (error) {\n      this.setActionResultFromError(error);\n    }\n  }\n\n  private setActionResultFromError(error: any): void {\n    if (typeof error === \"string\") {\n      this.actionResult = error;\n    }\n    else if (error instanceof Error) {\n      this.actionResult = error.message;\n    }\n  }\n}\n","<div class=\"action-area\">\n    <button mat-raised-button (click)=\"importPlayer($event)\">Import</button>\n    <button mat-raised-button (click)=\"exportPlayer($event)\">Export</button>\n    <label>{{ actionResult }}</label>\n</div>\n<div class=\"data-area\">\n    <label>\n        Spieler JSON:\n        <textarea class=\"data-text\" [(ngModel)]=\"jsonContent\"></textarea>\n    </label>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PlayerLocalstorageService } from 'src/app/services/player-localstorage.service';\nimport { PlayerModelProviderService } from 'src/app/services/player-model-provider.service';\n\n@Component({\n  selector: 'app-player-localstorage',\n  templateUrl: './player-localstorage.component.html',\n  styleUrls: ['./player-localstorage.component.css']\n})\nexport class PlayerLocalstorageComponent implements OnInit {\n\n  actionResult: string | null = null;\n  constructor(private pmps: PlayerModelProviderService, private plss: PlayerLocalstorageService) { }\n\n  ngOnInit(): void {\n  }\n\n  loadPlayerFromStorage(event: Event): void {\n    try {\n      const loadedPlayer = this.plss.loadPlayer();\n      if (loadedPlayer !== null) {\n        this.pmps.player = loadedPlayer;\n        this.actionResult = \"Player loaded successfully\";\n      } else {\n        this.actionResult = \"No player found in local storage\";\n      }\n\n    } catch (error) {\n      this.setActionResultFromError(error);\n    }\n  }\n\n  savePlayerToStorage(event: Event): void {\n    try {\n      this.plss.savePlayer(this.pmps.player);\n      this.actionResult = \"Player stored successfully\";\n    } catch (error) {\n      this.setActionResultFromError(error);\n    }\n  }\n\n  deletePlayerFromStorage(event: Event): void {\n    try {\n      this.plss.deletePlayer();\n      this.actionResult = \"Player data deleted!\";\n    } catch (error) {\n      this.setActionResultFromError(error);\n    }\n  }\n\n  private setActionResultFromError(error: any): void {\n    if (typeof error === \"string\") {\n      this.actionResult = error;\n    }\n    else if (error instanceof Error) {\n      this.actionResult = error.message;\n    }\n  }\n}\n","<button mat-raised-button (click)=\"loadPlayerFromStorage($event)\">Load</button>\n<button mat-raised-button (click)=\"savePlayerToStorage($event)\">Save</button>\n<button mat-raised-button color=\"warn\" (click)=\"deletePlayerFromStorage($event)\">Delete</button>\n<label>{{ actionResult }}</label>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { DiceRollerService } from 'src/app/services/dice-roller.service';\nimport { PlayerModeProviderService } from 'src/app/services/player-mode-provider.service';\n\n@Component({\n  selector: 'app-stat-value',\n  templateUrl: './stat-value.component.html',\n  styleUrls: ['./stat-value.component.css']\n})\nexport class StatValueComponent {\n\n  @Input() label: string = '';\n  @Input() value: number = 0;\n  @Output() valueChange = new EventEmitter<number>();\n\n  @Input() noOfDice: number = 1;\n  @Input() diceSides: number = 100;\n\n  public canRoll = true;\n  public rollResultAvailable = false;\n  public valueCheckSuccessful = false;\n  public rollResult = 0;\n  constructor(public pmodeps: PlayerModeProviderService, \n    private diceRollerService:DiceRollerService) { }\n\n  onClick() {\n    this.canRoll = false;\n    this.diceRollerService.rollDice(this.noOfDice, this.diceSides).subscribe(x => this.evaluateDiceRollResult(this.value, x.result));\n  }\n\n  private evaluateDiceRollResult(val: number, diceRollResult: number) {\n    this.rollResult = diceRollResult;\n    if (diceRollResult <= val) { \n      this.valueCheckSuccessful = true;\n    } else {\n      this.valueCheckSuccessful = false;\n    }\n    this.rollResultAvailable = true;\n    setTimeout(() => { \n      this.resetRollability();\n    }, 10000);\n  }\n\n  private resetRollability()  {\n    this.canRoll = true;\n    this.rollResultAvailable = false;\n  }\n}\n","<label> {{ label }}\n    <input *ngIf=\"pmodeps.editMode\" type=\"number\" [(ngModel)]=\"value\" class=\"editable-value\">\n    <span *ngIf=\"!pmodeps.editMode\">\n        <input  type=\"text\" [ngModel]=\"value\" readonly=\"true\" class=\"readonly-value\">\n        <button [disabled]=\"!canRoll\" (click)=\"onClick()\">\n            Prüfwurf\n        </button>\n        <br>\n        <span *ngIf=\"!rollResultAvailable && !canRoll\">\n            Warte auf {{ noOfDice }}d{{ diceSides}}\n        </span>\n        <span *ngIf=\"rollResultAvailable\">\n            <label *ngIf=\"valueCheckSuccessful\" class=\"check-success\">{{ rollResult }} Prüfwurf geschafft :)</label>\n            <label *ngIf=\"!valueCheckSuccessful\" class=\"check-failed\">{{ rollResult }} Prüfwurf fehlgeschlagen :(</label>\n        </span>\n\n    </span>\n</label>","export class Player {\r\n    name: string = \"\";\r\n    type: string = \"\";\r\n    // Grad\r\n    level: number = 1;\r\n    // Herkunft\r\n    origin: string = \"\";\r\n    // stand\r\n    socialStanding: string = \"\";\r\n    // Alter\r\n    age: number = 0;\r\n    // Beruf\r\n    occupation: string = \"\";\r\n    // Glaube\r\n    faith: string = \"\";\r\n    // Göttliche Gnade\r\n    godlyGrace: number = 0;\r\n    appearance: Appearance = new Appearance();\r\n    stats: CharacterStats = new CharacterStats();\r\n    attributes: Attributes = new Attributes();\r\n    bonusStats: BonusStats = new BonusStats();\r\n    defenseStats: DefenseStats = new DefenseStats();\r\n    experience: ExperiencePoints = new ExperiencePoints();\r\n    currencies: Currencies = new Currencies();\r\n    potions: Potions = new Potions();\r\n    // Ausrüstung\r\n    equipment: Item[] = [];\r\n    weapons: Weapon[] = [];\r\n\r\n    // Spezialwaffe\r\n    specialWeapon: Item = new Item();\r\n\r\n    // Verbrauchs und Zaubermaterial\r\n    items: ConsumableItem[] = [];\r\n\r\n    // Fertigkeiten\r\n    skills: Skill[] = [\r\n        new Skill(\"Balancieren\", 0),\r\n        new Skill(\"Betäuben\", 0),\r\n        new Skill(\"Beredsamkeit\", 0),\r\n        new Skill(\"Beschatten\", 0),\r\n        new Skill(\"Fallen entdecken\", 0),\r\n        new Skill(\"Fallenmech.\", 0),\r\n        new Skill(\"Fallenstellen\", 0),\r\n        new Skill(\"Geländelauf\", 0),\r\n        new Skill(\"Horchen\", 0),\r\n        new Skill(\"Kanufahren\", 0),\r\n        new Skill(\"Klettern\", 0),\r\n        new Skill(\"Mechanik\", 0),\r\n        new Skill(\"Reiten\", 0),\r\n        new Skill(\"Rudern\", 0),\r\n        new Skill(\"Schleichen\", 0),\r\n        new Skill(\"Schlittenfahren\", 0),\r\n        new Skill(\"Schlösser öffnen\", 0),\r\n        new Skill(\"Schwimmen\", 0),\r\n        new Skill(\"Seilkunst\", 0),\r\n        new Skill(\"Springen\", 0),\r\n        new Skill(\"Spurenlesen\", 0),\r\n        new Skill(\"Stehlen\", 0),\r\n        new Skill(\"Tauchen\", 0),\r\n        new Skill(\"Überleben\", 0),\r\n        new Skill(\"Verführen\", 0),\r\n        new Skill(\"Verhören\", 0),\r\n        new Skill(\"Verkleiden\", 0),\r\n        new Skill(\"Wagenlenken\", 0),\r\n        new Skill(\"Wahrnehmung\", 0),\r\n        new Skill(\"Werfen/Fangen\", 0),\r\n        new Skill(\"Winden\", 0),\r\n        new Skill(\"Magierstab\", 0),\r\n    ];\r\n    // Grundkenntnisse\r\n    knowledge: Skill[] = [\r\n        new Skill(\"Einhandschwerter\", 0),\r\n        new Skill(\"Stichwaffen\", 0),\r\n        new Skill(\"Einhandschlagwaffen\", 0),\r\n        new Skill(\"Spießwaffen\", 0),\r\n        new Skill(\"Zweihandschwerter\", 0),\r\n        new Skill(\"Zweihandschlagwaffen\", 0),\r\n        new Skill(\"Kettenwaffen\", 0),\r\n        new Skill(\"Stäbe\", 0),\r\n        new Skill(\"waffenloser Kampf\", 0),\r\n        new Skill(\"Bögen\", 0),\r\n        new Skill(\"Armbrüste\", 0),\r\n        new Skill(\"Schleudern\", 0),\r\n        new Skill(\"Wurfwaffen\", 0),\r\n        new Skill(\"Blasrohre\", 0),\r\n        new Skill(\"Schilde\", 0),\r\n        new Skill(\"Parierwaffen\", 0),\r\n        new Skill(\"Kampf in Vollrüstung\", 0),\r\n        new Skill(\"Lesen und Schreiben\", 0),\r\n        new Skill(\"Wissen von der Magie\", 0),\r\n        new Skill(\"Lesen von Zauberschrift\", 0),\r\n\r\n    ];\r\n\r\n    magicSpells: MagicSpell[] = [];\r\n\r\n    notes: string = \"\";\r\n    remarks: Remark[] = [];\r\n    currentQuest: Quest = new Quest();\r\n}\r\n\r\nclass Appearance {\r\n    // Größe\r\n    height: number = 0;\r\n    // Gewicht\r\n    weight: number = 0;\r\n    // Gestalt\r\n    figure: string = \"\";\r\n    // Aussehen (Flavortext)\r\n    appearance: string = \"\";\r\n\r\n}\r\n\r\nclass Quest {\r\n    // Aktueller Auftrag\r\n    description: string = \"\";\r\n\r\n    //Quest Gegenstände\r\n    questItems: Item[] = [];\r\n    // Bekannte Figuren\r\n    knownCharacters: Item[] = [];\r\n\r\n    notes: string = \"\";\r\n    remarks: Remark[] = [];\r\n}\r\n\r\nclass Weapon {\r\n    name: string = \"\";\r\n    // Verzauberung\r\n    enchantment: string = \"\";\r\n    // EW: Angriff\r\n    attack: number = 0;\r\n    // Schaden\r\n    damage: DiceValue = new DiceValue();\r\n    // EW: Abwehr\r\n    defense: number = 0;\r\n    // -APV - Ausdauerpunkte Verlust\r\n    actionPointLossValue: number = 0;\r\n    // PP - Praxis Punkte\r\n    misfortuneCount: number = 0;\r\n}\r\n\r\nexport class Skill {\r\n    constructor(name: string, level: number) {\r\n        this.name = name;\r\n        this.level = level;\r\n    }\r\n    // Fertigkeit\r\n    name: string = \"\";\r\n    // EW\r\n    level: number = 0;\r\n    // EW Bonus durch Attribute\r\n    characterBonus: number = 0;\r\n\r\n    get total(): number {\r\n        return this.level + this.characterBonus;\r\n    }\r\n\r\n}\r\n\r\nclass MagicSpell {\r\n    // Zauber\r\n    name: string = \"\";\r\n\r\n    // Art\r\n    type: string = \"\";\r\n\r\n    // AP - Ausdauerpunkte\r\n    staminaPointCost: number = 0;\r\n\r\n    // Wirkung\r\n    effectDescription: string = \"\";\r\n\r\n    // Zauberdauer\r\n    effectDuration: string = \"\";\r\n\r\n    // Wirkungsdauer\r\n    castDuration: string = \"\";\r\n\r\n    // Wirkungsbereich\r\n    areaOfEffect: string = \"\";\r\n\r\n    // Zutaten\r\n    requiredIngredients: ConsumableItem[] = [];\r\n\r\n}\r\n\r\nclass DiceValue {\r\n    diceSides: number = 0;\r\n    numberOfDice: number = 0;\r\n    bonusValue: number = 0;\r\n}\r\n\r\nclass DefenseStats {\r\n    // Rüstung - Flavortext\r\n    armorDescription: string = \"\";\r\n    //RK - Rüstungsklasse\r\n    armorClass: string = \"\";\r\n    // LPV - Lebenspunkte Verlustwert\r\n    hitPointLossValue: number = 0;\r\n    //Abwehr\r\n    defense: number = 0;\r\n    magicResistance: MagicResistance = new MagicResistance();\r\n}\r\n\r\nclass ExperiencePoints {\r\n    // GFP - Gesamterfahrungspunkte\r\n    total: number = 0;\r\n    // AEP - Allgemeine Erfahrungspunkte\r\n    common: number = 0;\r\n    //KEP - Kampferfahrungspunkte\r\n    battle: number = 0;\r\n    // ZEP - Zaubererfahrungspunkte\r\n    magic: number = 0;\r\n}\r\n\r\nclass BonusStats {\r\n    // Ausdauer\r\n    stamina: number = 0;\r\n    // Zaubern\r\n    magic: number = 0;\r\n    // Angriff\r\n    attack: number = 0;\r\n    // Schaden\r\n    damage: number = 0;\r\n    //Abwehr\r\n    defense: number = 0;\r\n\r\n    magicResistance = new MagicResistance();\r\n\r\n}\r\n\r\nclass MagicResistance {\r\n    // psy ZR - psychische Zauberresistenz\r\n    psychologic: number = 0;\r\n\r\n    // phs ZR - physische Zauberresistenz\r\n    physical: number = 0;\r\n\r\n    // phk ZR - physikalische Zauberresistenz\r\n    environmental: number = 0;\r\n}\r\n\r\nclass Attributes {\r\n    // ST - Stärke\r\n    strength: number = 0;\r\n    // GE - Geschicklichkeit\r\n    agility: number = 0;\r\n    //KO - Konstitution\r\n    constitution: number = 0;\r\n    // IN - Intelligenz\r\n    intelligence: number = 0;\r\n    // ZT - Zaubertalent\r\n    magicAffinity: number = 0;\r\n    // AU - Aussehen\r\n    looks: number = 0;\r\n    // PA - Persönliche Ausstrahlung\r\n    charisma: number = 0;\r\n    // SB - Selbstbeherrschung\r\n    selfControl: number = 0;\r\n    //HGW - Handgemenge Wert / Raufen\r\n    closeQuarterCombatAffinity: number = 0;\r\n    //KAW - Kraftakt Wert\r\n    showOfStrengthAffinitiy: number = 0;\r\n    // RW - Reaktions Wert\r\n    reaction: number = 0;\r\n    // B - Bewegung\r\n    movement: number = 0;\r\n    // WLW - Wiederbelebungswert\r\n    revivalAffinitiy: number = 0;\r\n    // LP-Basis - Lebenspunkte-Basis\r\n    hitPointsBase: number = 0;\r\n    // GiT - Gift Toleranz\r\n    poisonResistance: number = 0;\r\n\r\n}\r\n\r\nclass Currencies {\r\n    coins: Coins = new Coins();\r\n    jewels: Jewels = new Jewels();\r\n}\r\n\r\nclass Coins {\r\n    // GS - Goldstücke\r\n    gold: number = 0;\r\n    // SS - Silberstücke\r\n    silver: number = 0;\r\n    // KS - Kupferstücke\r\n    copper: number = 0;\r\n}\r\n\r\nclass Jewels {\r\n    // 50er\r\n    fifties: number = 0;\r\n    // 100er\r\n    hundreds: number = 0;\r\n    // 1000er\r\n    thousands: number = 0;\r\n}\r\n\r\nclass CharacterStats {\r\n    current: Stats = new Stats();\r\n    base: Stats = new Stats();\r\n}\r\n\r\nclass Stats {\r\n    // LP - Lebenspunkte\r\n    hitPoints: number = 0;\r\n    // AP - Ausdauerpunkte\r\n    staminaPoints: number = 0;\r\n}\r\n\r\nclass Item {\r\n    name: string = \"\";\r\n    description: string = \"\";\r\n}\r\n\r\nexport class ConsumableItem extends Item {\r\n    quantity: number = 1;\r\n}\r\n\r\nclass Remark {\r\n    shortText: string = \"\";\r\n    text: string = \"\";\r\n    // TODO Can we store links and images here?\r\n}\r\n\r\nclass Potions {\r\n    strength: StrengthPotions = new StrengthPotions();\r\n    healing: HealingPotions = new HealingPotions();\r\n}\r\n\r\nclass StrengthPotions {\r\n    // 1W6\r\n    small: number = 0;\r\n    // 2W6\r\n    large: number = 0;\r\n}\r\n\r\nclass HealingPotions {\r\n    // 1W6\r\n    small: number = 0;\r\n    // 2W6\r\n    medium: number = 0;\r\n    // 3W6\r\n    large: number = 0;\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule} from '@angular/material/divider';\nimport { MatListModule} from '@angular/material/list';\n\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    CommonModule,\n    MatTabsModule,\n    MatDividerModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule\n  ],\n  exports: [\n    MatTabsModule,\n    MatDividerModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n  ]\n})\nexport class NgMaterialModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { RolzDiceRollResult } from '../models/rolz-dice-roll-result'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiceRollerService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  rollDice(noOfDice: number, diceSides: number): Observable<RolzDiceRollResult> {\n    // https://rolz.org/help/api\n    const diceParam = noOfDice + 'd' + diceSides;\n    return this.httpClient.get<RolzDiceRollResult>(`https://rolz.org/api/?${diceParam}.json`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Player } from '../models/player';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerLocalstorageService {\n\n  private storageKey: string = \"Player\";\n  constructor() { }\n\n  savePlayer(player: Player): void {\n    localStorage.setItem(this.storageKey, JSON.stringify(player));\n  }\n\n  loadPlayer(): Player | null {\n    const playerJson = localStorage.getItem(this.storageKey);\n    if (playerJson === null) {\n      return null;\n    }\n\n    return JSON.parse(playerJson);\n  }\n\n  deletePlayer(): void {\n    localStorage.removeItem(this.storageKey);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerModeProviderService {\n\n  editMode: boolean = false;\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { Player } from '../models/player'\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerModelProviderService {\n\n  private _player: Player;\n  constructor() {\n    this._player = new Player();\n  }\n\n  get player(): Player {\n    return this._player;\n  }\n\n  set player(player: Player) {\n    this._player = player;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","routes","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","pmps","plss","pmodeps","titleService","ngAfterViewInit","playerFromStorage","loadPlayer","player","setTitle","name","p","editMode","b","selectors","decls","vars","consts","template","i0","BrowserModule","FormsModule","NumericValueHandlerComponent","BrowserAnimationsModule","NgMaterialModule","AdventureSheetComponent","PlayerImportExportComponent","PlayerModelProviderService","CharacterSheetComponent","PlayerLocalstorageComponent","BasicCharacterStatsComponent","HttpClientModule","StatValueComponent","AppModule","bootstrap","declarations","EventEmitter","ConsumableItem","ngOnInit","addItem","event","items","push","removeItem","itemToRemove","itemIndex","indexOf","splice","inputs","outputs","playerChange","ctx","CheckNumberResult","Number","NaN","CheckEvaluatableToNumberResult","isValid","currentValue","undefined","canEvaluatableToNumberCheckResult","canEvaluatableToNumber","currentText","isEvaluatable","isNumberWithinRange","value","_currentValue","val","toString","currentValueChange","emit","onKeyDown","handled","key","resetValue","countUp","countDown","preventDefault","onModelChange","projectingValue","isNumberCheckResult","isValidNumber","isNumber","isExpressionTerminated","projectedValue","canCountUp","maxValue","canCountDown","minValue","canReset","baseValue","isMinValid","isMaxValid","text","result","isEmptyString","sanitizedText","endsWith","substring","length","evalResult","eval","numberEvaluationResult","input","isTextValidNumber","flooredNumber","getFlooredValue","isNumberValidNumber","isSafeInteger","Math","floor","converterFlooredNumber","valueOf","trim","label","showReset","playerModelProviderService","getPlayerAsJson","JSON","stringify","importPlayer","jsonContent","actionResult","setPlayerFromJson","exportPlayer","error","setActionResultFromError","playerJson","parse","Error","message","loadPlayerFromStorage","loadedPlayer","savePlayerToStorage","savePlayer","deletePlayerFromStorage","deletePlayer","diceRollerService","onClick","canRoll","rollDice","noOfDice","diceSides","subscribe","x","evaluateDiceRollResult","diceRollResult","rollResult","valueCheckSuccessful","rollResultAvailable","setTimeout","resetRollability","valueChange","Player","Appearance","CharacterStats","Attributes","BonusStats","DefenseStats","ExperiencePoints","Currencies","Potions","Item","Skill","Quest","Weapon","DiceValue","level","total","characterBonus","MagicSpell","MagicResistance","Coins","Jewels","Stats","Remark","StrengthPotions","HealingPotions","CommonModule","MatTabsModule","MatButtonModule","MatIconModule","MatDividerModule","MatListModule","DiceRollerService","httpClient","diceParam","get","factory","providedIn","PlayerLocalstorageService","localStorage","setItem","storageKey","getItem","PlayerModeProviderService","_player","environment","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err","console"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}