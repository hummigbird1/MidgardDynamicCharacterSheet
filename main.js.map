{"version":3,"sources":["./src/app/services/player-model-provider.service.ts","./src/environments/environment.ts","./src/app/ng-material/tabs/tabs.component.ts","./src/app/components/player-import-export/player-import-export.component.ts","./src/app/components/player-import-export/player-import-export.component.html","./src/app/models/player.ts","./src/app/services/player-localstorage.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/character-sheet/character-sheet.component.ts","./src/app/components/character-sheet/character-sheet.component.html","./src/app/components/adventure-sheet/adventure-sheet.component.ts","./src/app/components/adventure-sheet/adventure-sheet.component.html","./src/app/components/player-localstorage/player-localstorage.component.ts","./src/app/components/player-localstorage/player-localstorage.component.html","./src/app/ng-material/ng-material.module.ts","./src/app/components/numeric-value-handler/numeric-value-handler.component.ts","./src/app/components/numeric-value-handler/numeric-value-handler.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Player } from '../models/player'\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerModelProviderService {\n\n  private _player: Player;\n  constructor() {\n    this._player = new Player();\n  }\n\n  get player(): Player {\n    return this._player;\n  }\n\n  set player(player: Player) {\n    this._player = player;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tabs',\n  templateUrl: './tabs.component.html',\n  styleUrls: ['./tabs.component.css']\n})\nexport class TabsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { PlayerModelProviderService } from 'src/app/services/player-model-provider.service';\n\n@Component({\n  selector: 'app-player-import-export',\n  templateUrl: './player-import-export.component.html',\n  styleUrls: ['./player-import-export.component.css']\n})\nexport class PlayerImportExportComponent implements OnInit {\n\n  constructor(private playerModelProviderService: PlayerModelProviderService) { }\n\n  actionResult: string | null = null;\n  jsonContent: string | undefined;\n  ngOnInit(): void {\n  }\n\n  getPlayerAsJson(): string {\n    return JSON.stringify(this.playerModelProviderService.player, null, 2);\n  }\n\n  importPlayer(event: Event): void {\n    if (this.jsonContent === undefined) {\n      this.actionResult = \"Nothing to import. Paste a character json into the text area\"\n      return;\n    }\n    this.setPlayerFromJson(this.jsonContent);\n  }\n\n  exportPlayer(event: Event): void {\n    try {\n      this.jsonContent = this.getPlayerAsJson();\n      this.actionResult = \"Exported successfully\";\n    }\n    catch (error) {\n      this.setActionResultFromError(error);\n    }\n  }\n\n  setPlayerFromJson(playerJson: string): void {\n    try {\n      this.playerModelProviderService.player = JSON.parse(playerJson);\n      this.actionResult = \"Imported successfully\";\n    }\n    catch (error) {\n      this.setActionResultFromError(error);\n    }\n  }\n\n  private setActionResultFromError(error: any): void {\n    if (typeof error === \"string\") {\n      this.actionResult = error;\n    }\n    else if (error instanceof Error) {\n      this.actionResult = error.message;\n    }\n  }\n}\n","<label>\n    Spieler JSON:\n    <textarea [(ngModel)]=\"jsonContent\"></textarea>\n\n</label>\n<button (click)=\"importPlayer($event)\">Import</button>\n<button (click)=\"exportPlayer($event)\">Export</button>\n<label>{{ actionResult }}</label>\n","export class Player {\n    name: string = \"\";\n    baseStats: Stats = new Stats();\n    currentStats: Stats = new Stats();\n    valueables: PlayerValueables = new PlayerValueables();\n    items: Item[] = [];\n}\n\nclass PlayerValueables {\n    coins: Coins = new Coins();\n    jewels: Jewels = new Jewels();\n}\n\nclass Coins {\n    gold: Number = 0;\n    silver: Number = 0;\n    copper: Number = 0;\n}\n\nclass Jewels {\n    fifties: Number = 0;\n    hundreds: Number = 0;\n    thousands: Number = 0;\n}\n\nclass Stats {\n    hitPoints: Number = 0;\n    actionPoints: Number = 0;\n}\n\nexport class Item {\n    name: string | null = null;\n    description: string | null = null;\n    quantity: Number = 1;\n}","import { Injectable } from '@angular/core';\nimport { Player } from '../models/player';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlayerLocalstorageService {\n\n  private storageKey: string = \"Player\";\n  constructor() { }\n\n  savePlayer(player: Player): void {\n    localStorage.setItem(this.storageKey, JSON.stringify(player));\n  }\n\n  loadPlayer(): Player | null {\n    const playerJson = localStorage.getItem(this.storageKey);\n    if (playerJson === null) {\n      return null;\n    }\n\n    return JSON.parse(playerJson);\n  }\n\n  deletePlayer(): void {\n    localStorage.removeItem(this.storageKey);\n  }\n}\n","import { AfterViewInit, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Player } from './models/player';\nimport { PlayerLocalstorageService } from './services/player-localstorage.service';\nimport { PlayerModelProviderService } from './services/player-model-provider.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements AfterViewInit {\n  title = 'MidgardDynamicCharacterSheet';\n\n  constructor(private pmps: PlayerModelProviderService, private plss: PlayerLocalstorageService) {\n  }\n\n  ngAfterViewInit(): void {\n    const playerFromStorage = this.plss.loadPlayer();\n    if (playerFromStorage != null) {\n      this.pmps.player = playerFromStorage;\n    }\n  }\n\n  get player(): Player {\n    return this.pmps.player;\n  }\n\n  set player(p: Player) {\n    this.pmps.player = p;\n  }\n}\n","<h1>Midgard Dynamic Character Sheet</h1>\n<mat-tab-group>\n  <mat-tab label=\"Character\">\n    <app-character-sheet [(player)]=\"player\"></app-character-sheet>\n  </mat-tab>\n  <mat-tab label=\"Abenteuer Tagesbogen\">\n    <app-adventure-sheet [(player)]=\"player\"></app-adventure-sheet>\n  </mat-tab>\n  <mat-tab label=\"UI Element Beispiel / Demo\">\n    <app-numeric-value-handler label='HP' [baseValue]=\"30\" [minValue]=\"0\" [maxValue]=\"30\"></app-numeric-value-handler>\n    <br />\n    <app-numeric-value-handler label='AP' [baseValue]='12' [minValue]=\"0\" [maxValue]=\"12\"></app-numeric-value-handler>\n    <br />\n    Beispiel - Numerische EIngabe ohne Reset:<br />\n    <app-numeric-value-handler label='BB' [baseValue]='500' [showReset]='false' [minValue]=\"0\" [maxValue]=\"99999999\"></app-numeric-value-handler>\n  </mat-tab>\n  <mat-tab label=\"Zauber\"> Hier könnten die Zaubersprüche stehen </mat-tab>\n  <mat-tab label=\"Beschwörungen\"> Hier könnten die Beschwörungen stehen</mat-tab>\n  <mat-tab label=\"Player Storage\">\n    <app-player-localstorage></app-player-localstorage>\n  </mat-tab>\n  <mat-tab label=\"Player Import/Export\">\n    <app-player-import-export></app-player-import-export>\n  </mat-tab>\n</mat-tab-group>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NumericValueHandlerComponent } from './components/numeric-value-handler/numeric-value-handler.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgMaterialModule } from './ng-material/ng-material.module';\nimport { AdventureSheetComponent } from './components/adventure-sheet/adventure-sheet.component';\nimport { PlayerImportExportComponent } from './components/player-import-export/player-import-export.component';\nimport { PlayerModelProviderService } from './services/player-model-provider.service';\nimport { CharacterSheetComponent } from './components/character-sheet/character-sheet.component';\nimport { PlayerLocalstorageComponent } from './components/player-localstorage/player-localstorage.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NumericValueHandlerComponent,\n    AdventureSheetComponent,\n    PlayerImportExportComponent,\n    CharacterSheetComponent,\n    PlayerLocalstorageComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    NgMaterialModule,\n  ],\n  providers: [ PlayerModelProviderService ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Player } from 'src/app/models/player';\n\n@Component({\n  selector: 'app-character-sheet',\n  templateUrl: './character-sheet.component.html',\n  styleUrls: ['./character-sheet.component.css']\n})\nexport class CharacterSheetComponent implements OnInit {\n\n  @Input() player!: Player;\n  @Output() playerChange = new EventEmitter<Player>();\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<label>\n    Name\n    <input [(ngModel)]=\"player.name\">\n</label>\n<br />\n<app-numeric-value-handler label=\"HP\" [(currentValue)]=\"player.currentStats.hitPoints\"\n    [baseValue]=\"player.baseStats.hitPoints\" [minValue]=\"0\" [maxValue]=\"player.baseStats.hitPoints\">\n</app-numeric-value-handler>\n<br />\n<app-numeric-value-handler label=\"AP\" [(currentValue)]=\"player.currentStats.actionPoints\"\n    [baseValue]=\"player.baseStats.actionPoints\" [minValue]=\"0\" [maxValue]=\"player.baseStats.actionPoints\">\n</app-numeric-value-handler>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Item, Player } from 'src/app/models/player';\n\n@Component({\n  selector: 'app-adventure-sheet',\n  templateUrl: './adventure-sheet.component.html',\n  styleUrls: ['./adventure-sheet.component.css']\n})\nexport class AdventureSheetComponent implements OnInit {\n\n  @Input() player!: Player;\n  @Output() playerChange = new EventEmitter<Player>();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  addItem(event: Event): void {\n    this.player.items.push(new Item());\n  }\n\n  removeItem(itemToRemove: Item): void{\n    var itemIndex = this.player.items.indexOf(itemToRemove);\n    this.player.items.splice(itemIndex, 1);\n  }\n}\n","<div class=\"container\">\n    <div class=\"CoinsArea\">\n        <h2>Münzen</h2>\n        <app-numeric-value-handler label=\"Gold\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\"\n            [(currentValue)]=\"player.valueables.coins.gold\">\n        </app-numeric-value-handler>\n        <app-numeric-value-handler label=\"Silber\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\"\n            [(currentValue)]=\"player.valueables.coins.silver\">\n        </app-numeric-value-handler>\n        <app-numeric-value-handler label=\"Kupfer\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\"\n            [(currentValue)]=\"player.valueables.coins.copper\">\n        </app-numeric-value-handler>\n    </div>\n    <div class=\"JewelArea\">\n        <h2>Edelsteine</h2>\n        <app-numeric-value-handler label=\"50er\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\"\n            [(currentValue)]=\"player.valueables.jewels.fifties\">\n        </app-numeric-value-handler>\n        <app-numeric-value-handler label=\"100er\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\"\n            [(currentValue)]=\"player.valueables.jewels.hundreds\">\n        </app-numeric-value-handler>\n        <app-numeric-value-handler label=\"1000er\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\"\n            [(currentValue)]=\"player.valueables.jewels.thousands\">\n        </app-numeric-value-handler>\n    </div>\n    <div class=\"EquipmentAndPotionsArea\">\n        <div class=\"PotionsArea\">\n            <div class=\"HealingPotionsArea\">\n                <h2>Heiltränke</h2>\n                <app-numeric-value-handler label=\"1w6\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\">\n                </app-numeric-value-handler>\n                <app-numeric-value-handler label=\"2w6\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\">\n                </app-numeric-value-handler>\n                <app-numeric-value-handler label=\"3w6\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\">\n                </app-numeric-value-handler>\n            </div>\n            <div class=\"PowerPotionsArea\">\n                <h2>Krafttränke</h2>\n                <app-numeric-value-handler label=\"1w6\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\">\n                </app-numeric-value-handler>\n                <app-numeric-value-handler label=\"2w6\" [minValue]=\"0\" [maxValue]=\"99999999999\" [showReset]=\"false\">\n                </app-numeric-value-handler>\n            </div>\n        </div>\n        <div class=\"EquipmentArea\">\n            <h2>Ausrüstung</h2>\n            <textarea class=\"equipment-content\"></textarea>\n        </div>\n    </div>\n    <div class=\"MaterialArea\">\n        <h2>Verbrauchsmaterial</h2>\n        <table class=\"material-table\">\n            <thead>\n                <tr class=\"material-row\">\n                    <th>Name</th>\n                    <th>Beschreibung</th>\n                    <th>Menge</th>\n                    <th></th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr *ngFor=\"let item of player.items\">\n                    <td>\n                        <input class=\"material-description\" [(ngModel)]=\"item.name\">\n                    </td>\n                    <td>\n                        <textarea class=\"material-description\" [(ngModel)]=\"item.description\"></textarea>\n                    </td>\n                    <td>\n                        <app-numeric-value-handler label=\"\" [(currentValue)]=\"item.quantity\" [minValue]=\"0\"\n                            [maxValue]=\"99999999999\" [showReset]=\"false\"></app-numeric-value-handler>\n                    </td>\n                    <td>\n                        <button (click)=\"removeItem(item)\">-</button>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n        <button (click)=\"addItem($event)\">+</button>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PlayerLocalstorageService } from 'src/app/services/player-localstorage.service';\nimport { PlayerModelProviderService } from 'src/app/services/player-model-provider.service';\n\n@Component({\n  selector: 'app-player-localstorage',\n  templateUrl: './player-localstorage.component.html',\n  styleUrls: ['./player-localstorage.component.css']\n})\nexport class PlayerLocalstorageComponent implements OnInit {\n\n  actionResult: string | null = null;\n  constructor(private pmps: PlayerModelProviderService, private plss: PlayerLocalstorageService) { }\n\n  ngOnInit(): void {\n  }\n\n  loadPlayerFromStorage(event: Event): void {\n    try {\n      const loadedPlayer = this.plss.loadPlayer();\n      if (loadedPlayer !== null) {\n        this.pmps.player = loadedPlayer;\n        this.actionResult = \"Player loaded successfully\";\n      } else {\n        this.actionResult = \"No player found in local storage\";\n      }\n\n    } catch (error) {\n      this.setActionResultFromError(error);\n    }\n  }\n\n  savePlayerToStorage(event: Event): void {\n    try {\n      this.plss.savePlayer(this.pmps.player);\n      this.actionResult = \"Player stored successfully\";\n    } catch (error) {\n      this.setActionResultFromError(error);\n    }\n  }\n\n  deletePlayerFromStorage(event: Event): void {\n    try {\n      this.plss.deletePlayer();\n      this.actionResult = \"Player data deleted!\";\n    } catch (error) {\n      this.setActionResultFromError(error);\n    }\n  }\n\n  private setActionResultFromError(error: any): void {\n    if (typeof error === \"string\") {\n      this.actionResult = error;\n    }\n    else if (error instanceof Error) {\n      this.actionResult = error.message;\n    }\n  }\n}\n","<button (click)=\"loadPlayerFromStorage($event)\">Load</button>\n<button (click)=\"savePlayerToStorage($event)\">Save</button>\n<button (click)=\"deletePlayerFromStorage($event)\">Delete</button>\n<label>{{ actionResult }}</label>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDividerModule} from '@angular/material/divider';\nimport { MatListModule} from '@angular/material/list';\nimport { TabsComponent } from './tabs/tabs.component'\n\n\n@NgModule({\n  declarations: [\n    TabsComponent\n  ],\n  imports: [\n    CommonModule,\n    MatTabsModule,\n    MatDividerModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule\n  ],\n  exports: [\n    MatTabsModule,\n    MatDividerModule,\n    MatIconModule,\n    MatListModule,\n    MatButtonModule,\n\n    TabsComponent\n  ]\n})\nexport class NgMaterialModule { }\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-numeric-value-handler',\n  templateUrl: './numeric-value-handler.component.html',\n  styleUrls: ['./numeric-value-handler.component.css']\n})\nexport class NumericValueHandlerComponent {\n\n  @Input() label: string = '';\n  @Input() currentValue: Number = 0;\n  @Input() minValue: Number = 0;\n  @Input() maxValue: Number = 0;\n  @Input() baseValue: Number = 0;\n  @Input() showReset: boolean = true;\n  @Output() currentValueChange = new EventEmitter<Number>();\n\n  constructor() { }\n\n  get isValid() {\n    if (this.currentValue === null || this.currentValue === undefined)\n      return false;\n\n    return this.currentValue >= this.minValue && this.currentValue <= this.maxValue;\n  }\n\n  onModelChange(event: Event): void {\n    // Unclear workaround:\n    // Without binding the ngModelEvent and emitting the currentValue ... direct edits of the input control are not registered outside of this component\n    // Question is why?  \n    this.currentValueChange.emit(this.currentValue);\n  }\n\n  get canCountUp() {\n    return this.currentValue < this.maxValue;\n  }\n\n  get canCountDown() {\n    return this.currentValue > this.minValue;\n  }\n\n  // TODO MaxWert muss überschreibbar werden wenn man z.B. im Level Up Modus ist\n  countUp() {\n    if (this.canCountUp) {\n      this.updateCurrentValue(Number(this.currentValue) + 1);\n    }\n  }\n\n  countDown() {\n    if (this.canCountDown) {\n      this.updateCurrentValue(Number(this.currentValue) - 1);\n    }\n  }\n\n  resetValue() {\n    this.updateCurrentValue(this.baseValue);\n  }\n\n  // TODO Only works when input is of type \"text\" (otherwise we cant get the raw text input to work with https://stackoverflow.com/a/18853513)\n  // But then the currentValue can change types (becoming a string instead of a number breaking other things in here (e.g. the isValid))\n  // so to make this work we would need to switch to a text input approach and make a lot of try-cast to numbers \n  // onKeyDown(event: KeyboardEvent) {\n  //   const inputControl = event.target as HTMLInputElement;\n  //   console.log(inputControl.innerText);\n  //   if (event.key === \"=\") {\n  //     event.preventDefault();\n  //     try {\n  //       this.updateCurrentValue(Number(eval(inputControl.value)));\n  //     }\n  //     catch {\n  //       // inputControl.valueAsNumber = Number(this.currentValue);\n  //     }\n  //   }\n  // }\n\n  private updateCurrentValue(value: Number): void {\n    this.currentValue = value;\n    this.currentValueChange.emit(this.currentValue);\n  }\n}\n","<label>{{ label }}\n    <input type=\"number\" class=\"numeric-input\" [(ngModel)]=\"currentValue\"\n        (ngModelChange)=\"onModelChange($event)\" [max]=\"maxValue\" [min]=\"minValue\" required\n        [class.invalid-input]=\"!isValid\" />\n</label>\n\n<span class=\"buttonContainer\">\n    <button (click)=\"countDown()\" [disabled]=\"!canCountDown || !isValid\">-</button>\n    <button (click)=\"countUp()\" [disabled]=\"!canCountUp || !isValid\">+</button>\n    <button *ngIf='showReset' (click)=\"resetValue()\">Reset</button>\n</span>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}